//==================================================================
//            SORGULAR (QUERIES)
//https://docs.mongodb.com/manual/reference/operator/query-comparison/ =>kaynak sitesi

///-----------------------------------------------------------------
//// 1- “urunler” adinda bir veritabani ve icerisinde “fiyatlar”
//// adinda bir collection tanimlayalim.
////------------------------------------------------

use("URUNLER")
db.createCollection("fiyatlar")

////-----------------------------------------------------------------
//2-Asagidaki dokumanlari collection`a kaudedip listeleyelim
////-----------------------------------------------------------------
db.fiyatlar.insertMany([
{"urunAdi":"TV", "fiyat": 5000, "vergi": 10 ,"summary":[{"version":1},{"show":"yok"}]},
{"urunAdi":"Telefon", "fiyat": 3500, "vergi": 20 },
{"urunAdi":"Utu", "fiyat": 1500, "vergi": 5 },
{"urunAdi":"Buzdolabi", "fiyat": 4000, "vergi": 10 } ] ); 

use("URUNLER")
db.fiyatlar.find()

////-----------------------------------------------------------------
//3- ilk 2 dokumani sorgula
////-----------------------------------------------------------------
use("URUNLER")
db.fiyatlar.find().limit(2);

////-----------------------------------------------------------------
//4-Sadece 2. ve 3. dokumani sorgula
////-----------------------------------------------------------------
use("URUNLER")
db.fiyatlar.find().skip(1).limit(2);

////-----------------------------------------------------------------
//5-1. dokumani sorgula
////-----------------------------------------------------------------
use("URUNLER")
db.fiyatlar.find().limit(1);// koseli parntez

db.fiyatlar.findOne();//suslu parantez



///=================================================================
////       LOGICAL QUERY OPERATOR (mantıksal sorgu) ($and ,$or, $not,$nor)
////
//// SYNTAX: { $and: [ {ifade1}, {ifade2} , ... , {ifadeN} ] }
////         { field: { $not: { <operator-ifade> } } }  ==> ( {"vergi": {$not: {$eq:10}}});
////=================================================================

{$and:[{fiyat : 5},{adı :"utu"}] }//and ve or
{
    "fiyat":{$not:{$eq:10}}
}

////-----------------------------------------------------------------
//// 5) Collection asagidaki dokumani ekleyelim.    
// ////-----------------------------------------------------------------
use("URUNLER")
db.fiyatlar.insertOne({"urunAdi":"Koltuk", "fiyat": 5000, "vergi": 10});
db.fiyatlar.find();

//6-fiyati=5000 olan ve urun adi=tv olan dokumanlari listele
use("URUNLER")
db.fiyatlar.find(  {$and: [ {fiyat:5000}, {urunAdi="TV"}] })

//7-UrunAdi=tu olan veya vergi -1= olan dokumani sorgulayiniz
 














